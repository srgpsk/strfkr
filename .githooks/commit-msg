#!/bin/sh
# Commit-msg hook: Enforce conventional commit format

set -e

# Check if commit message file was provided
if [ -z "$1" ]; then
    echo "‚ùå No commit message file provided"
    exit 1
fi

commit_msg_file="$1"

# Check if file exists and is readable
if [ ! -f "$commit_msg_file" ] || [ ! -r "$commit_msg_file" ]; then
    echo "‚ùå Cannot read commit message file: $commit_msg_file"
    exit 1
fi

commit_msg=$(cat "$commit_msg_file")

# Skip empty messages (Git will handle this)
if [ -z "$commit_msg" ] || [ "$commit_msg" = "" ]; then
    echo "‚ö†Ô∏è  Empty commit message, letting Git handle this"
    exit 0
fi

# Skip messages that start with # (comments)
if echo "$commit_msg" | grep -q "^#"; then
    echo "‚ö†Ô∏è  Comment-only commit message, letting Git handle this"
    exit 0
fi

# Conventional commit pattern
# Format: type(scope): description
# Examples: feat: add new feature, fix(auth): resolve login issue
pattern="^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,72}$"

if ! echo "$commit_msg" | grep -qE "$pattern"; then
    echo "‚ùå Invalid commit message format!"
    echo ""
    echo "üìù Commit message must follow conventional commits format:"
    echo "   <type>[optional scope]: <description>"
    echo ""
    echo "üè∑Ô∏è  Valid types:"
    echo "   feat:     A new feature"
    echo "   fix:      A bug fix"
    echo "   docs:     Documentation only changes"
    echo "   style:    Changes that don't affect meaning (white-space, formatting, etc)"
    echo "   refactor: A code change that neither fixes a bug nor adds a feature"
    echo "   test:     Adding missing tests or correcting existing tests"
    echo "   chore:    Changes to build process or auxiliary tools"
    echo "   perf:     A code change that improves performance"
    echo "   ci:       Changes to CI configuration files and scripts"
    echo "   build:    Changes that affect the build system or external dependencies"
    echo "   revert:   Reverts a previous commit"
    echo ""
    echo "‚úÖ Examples:"
    echo "   feat: add user authentication"
    echo "   fix(api): resolve timeout issue"
    echo "   docs: update installation guide"
    echo "   chore(deps): update go modules"
    echo ""
    echo "‚ùå Your message: '$commit_msg'"
    exit 1
fi

echo "‚úÖ Commit message format is valid!"
exit 0