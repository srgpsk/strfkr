FROM golang:1.24-bullseye AS base

# Metadata
LABEL maintainer="strfkr-dev"
LABEL description="Base development image for Strfkr project"
LABEL version="1.0"

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Core utilities
    git ca-certificates tzdata wget curl \
    # SQLite support
    sqlite3 libsqlite3-dev \
    # Build tools
    build-essential pkg-config \
    # Development utilities
    htop tree vim \
    # Network tools for debugging
    net-tools iputils-ping telnet \
    # GPG for commit signing
    gnupg2 \
    # Clean up to reduce image size
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean \
    && apt-get autoremove -y

# Install Go development tools in specific order for better caching
RUN go install github.com/air-verse/air@latest
RUN go install github.com/a-h/templ/cmd/templ@latest  
RUN go install golang.org/x/tools/gopls@latest
RUN go install golang.org/x/tools/cmd/goimports@latest

# Install YAML formatter (Go-based)
RUN go install github.com/google/yamlfmt/cmd/yamlfmt@latest && \
    cp /go/bin/yamlfmt /usr/local/bin/yamlfmt

# Install sqlc
RUN curl -L https://downloads.sqlc.dev/sqlc_1.29.0_linux_amd64.tar.gz | tar -xz -C /usr/local/bin sqlc

# Install golangci-lint using the official installer
RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/HEAD/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.2.0

# Install remaining tools
RUN go install github.com/go-delve/delve/cmd/dlv@latest
RUN go install github.com/swaggo/swag/cmd/swag@latest
RUN go install github.com/golang-migrate/migrate/v4/cmd/migrate@latest

# Set up environment and workspace
WORKDIR /app
RUN mkdir -p cmd internal pkg web/templates web/static data tmp

# Go environment
ENV CGO_ENABLED=1
ENV GO111MODULE=on
ENV GOPROXY=https://proxy.golang.org,direct
ENV GOSUMDB=sum.golang.org

# Build arguments for conditional key copying
ARG COPY_GPG=false
ARG COPY_SSH=false

# Create vscode user with UID 1000 to match host user
RUN groupadd --gid 1000 vscode \
    && useradd --uid 1000 --gid vscode --shell /bin/bash --create-home vscode \
    && mkdir -p /etc/sudoers.d \
    && echo 'vscode ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/vscode \
    && chmod 0440 /etc/sudoers.d/vscode

# Create base directories
RUN mkdir -p /home/vscode/.gnupg /home/vscode/.ssh \
    && chown -R vscode:vscode /home/vscode \
    && chmod 700 /home/vscode/.gnupg /home/vscode/.ssh

# Conditionally copy GPG keys from build context
COPY --chown=vscode:vscode .build-keys-temp/.gnupg/ /tmp/gnupg-host/
RUN if [ "$COPY_GPG" = "true" ] && [ -d "/tmp/gnupg-host" ]; then \
        cp -r /tmp/gnupg-host/* /home/vscode/.gnupg/ && \
        chown -R vscode:vscode /home/vscode/.gnupg && \
        chmod 700 /home/vscode/.gnupg && \
        find /home/vscode/.gnupg -type f -exec chmod 600 {} \; && \
        find /home/vscode/.gnupg -type d -exec chmod 700 {} \; && \
        echo "✅ GPG keys copied to image with correct permissions"; \
    else \
        echo "ℹ️  No GPG keys copied"; \
    fi && \
    rm -rf /tmp/gnupg-host

# Conditionally copy SSH keys from build context
COPY --chown=vscode:vscode .build-keys-temp/.ssh/ /tmp/ssh-host/
RUN if [ "$COPY_SSH" = "true" ] && [ -d "/tmp/ssh-host" ]; then \
        cp -r /tmp/ssh-host/* /home/vscode/.ssh/ && \
        chmod 600 /home/vscode/.ssh/* 2>/dev/null || true && \
        chmod 644 /home/vscode/.ssh/*.pub 2>/dev/null || true && \
        echo "✅ SSH keys copied to image"; \
    else \
        echo "ℹ️  No SSH keys copied"; \
    fi && \
    rm -rf /tmp/ssh-host

# Set up Go environment for vscode user
RUN mkdir -p /home/vscode/.cache/go-build /home/vscode/go/pkg/mod \
    && chown -R vscode:vscode /home/vscode \
    && chmod 755 /home/vscode/.cache/go-build /home/vscode/go

# Copy Go tools to vscode user's path  
RUN cp -r /go/bin/* /usr/local/bin/ 2>/dev/null || true

# Switch to vscode user as default
USER vscode

# Set Go environment variables for vscode user ONLY
ENV HOME=/home/vscode
ENV GOCACHE=/home/vscode/.cache/go-build
ENV GOPATH=/home/vscode/go
ENV GOMODCACHE=/home/vscode/go/pkg/mod
ENV PATH="/usr/local/go/bin:/go/bin:/usr/local/bin:${PATH}"

WORKDIR /app